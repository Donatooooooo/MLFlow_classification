name: Ask name and version

on:
  pull_request:

permissions:
  pull-requests: write
  contents: write

jobs:
  name_version_comment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check if comment already exists
        id: check_comment
        run: |
          COMMENT="Per creare la Model Card è necessario specificare il nome e la versione del modello all'interno del file name_version.md, che si trova nella directory ModelCardsGenerator/Data."
          PR_NUMBER=${{ github.event.pull_request.number }}

          COMMENTS_URL="https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments"
          EXISTING_COMMENTS=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" $COMMENTS_URL)

          CONTROL=false
          if echo "$EXISTING_COMMENTS" | grep -q "\"body\": \"$COMMENT\""; then
            echo "Comment already exists"
            CONTROL=true
          fi

          echo "::set-output name=comment_exists::$CONTROL"

      - name: Generate comment
        if: steps.check_comment.outputs.comment_exists == 'false'
        run: |
          COMMENT="Per creare la Model Card è necessario specificare il nome e la versione del modello all'interno del file name_version.md, che si trova nella directory ModelCardsGenerator/Data."
          PR_NUMBER=${{ github.event.pull_request.number }}
          PR_NUMBER=${{ github.event.pull_request.number }}
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments \
            -d "{\"body\":\"$COMMENT\"}"

      - name: Check if name_version.md and _parts.md exist
        if: steps.check_comment.outputs.comment_exists == 'false'
        id: check_files
        run: |
          if [ -f "ModelCardsGenerator/Data/name_version.md" ] && [ -f "ModelCardsGenerator/Data/_parts.md" ]; then
            CONTROL=true
          else
            CONTROL=false
          fi

          echo "::set-output name=file_exists::$CONTROL"

      - name: Create md files
        if: steps.check_files.outputs.file_exists == 'false'
        run: |
          mkdir -p ModelCardsGenerator/Data
          > ModelCardsGenerator/Data/name_version.md
          > ModelCardsGenerator/Data/_parts.md
          echo -e "Description:\n\nHow to use:\n\nIntended usage:\n\nLimitations:" >> ModelCardsGenerator/Data/_parts.md

      - name: Commit and push files
        if: steps.check_files.outputs.file_exists == 'false'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "created md files"
          git pull --rebase origin ${{ github.head_ref }}
          git push origin HEAD:${{ github.head_ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


