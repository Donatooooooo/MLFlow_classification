name: Process name_version.md

on:
  pull_request:
    paths:
      - 'src/Data/name_version.md'

jobs:
  process_file:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12.7'

      - name: Install dependencies
        run: |
          pip install mlflow
          pip install jinja2

      - name: Read info.md and pass to main.py
        run: |
          if [ -f src/Data/name_version.md ]; then
            CONTENT=$(cat src/Data/name_version.md)
            echo "File content: $CONTENT"
            python src/main.py "$(printf '%s' "$CONTENT")" 
          else
            echo "File src/Data/name_version.md not found!"
            exit 1
          fi

      - name: test pass
        run: |
          if [ -f src/Data/name_version.md ]; then
            CONTENT=$(cat src/Data/name_version.md)
            echo "File content: $CONTENT"
            
            # Esegui lo script Python e cattura il codice di uscita
            if python src/main.py "$(printf '%s' "$CONTENT")"; then
              echo "No exceptions"
            else
              COMMENT="$CONTENT: No model in Model Registry"
              PR_NUMBER=${{ github.event.pull_request.number }}
              PR_NUMBER=${{ github.event.pull_request.number }}
              curl -X POST \
                -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                -H "Accept: application/vnd.github.v3+json" \
                https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments \
                -d "{\"body\":\"$COMMENT\"}"
            fi
          else
            echo "File src/Data/name_version.md not found!"
            exit 1
          fi

      - name: Commit and push Model Card
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add ModelCards
          git commit -m "Updated Model Card"
          git pull --rebase origin ${{ github.head_ref }}
          git push origin HEAD:${{ github.head_ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
